openapi: 3.0.3
info:
  title: KB Labs Mind API
  description: AI-oriented query interface for KB Labs Mind knowledge management system
  version: 1.0.0
  contact:
    name: KB Labs Team
    url: https://github.com/kirill-baranov/kb-labs-mind
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.kb-labs.com/mind
    description: Production server

paths:
  /mind/query:
    post:
      summary: Execute Mind Query
      description: Execute a query against the Mind knowledge graph
      operationId: executeQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
            examples:
              impact_query:
                summary: Impact query example
                value:
                  query: impact
                  params:
                    file: packages/core/src/index.ts
                  options:
                    limit: 100
                    aiMode: true
              exports_query:
                summary: Exports query example
                value:
                  query: exports
                  params:
                    file: src/utils.ts
                  options:
                    aiMode: true
              docs_query:
                summary: Documentation query example
                value:
                  query: docs
                  params:
                    type: adr
                    search: architecture
                  options:
                    limit: 50
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
              examples:
                success_response:
                  summary: Successful query response
                  value:
                    ok: true
                    code: null
                    query: impact
                    params:
                      file: packages/core/src/index.ts
                    result:
                      importers:
                        - file: packages/cli/src/commands/build.ts
                          imports: ['CoreService', 'Config']
                        - file: packages/web/src/app.ts
                          imports: ['CoreService']
                      count: 2
                    summary: Found 2 file(s) importing this module. Top importers: build.ts, app.ts
                    suggestNextQueries:
                      - query exports packages/core/src/index.ts to see what this file exports
                      - query chain packages/core/src/index.ts to see full dependency chain
                    schemaVersion: "1.0"
                    meta:
                      cwd: "/path/to/project"
                      queryId: "impact_abc123"
                      tokensEstimate: 150
                      cached: false
                      filesScanned: 1
                      edgesTouched: 25
                      depsHash: "sha256_abc123"
                      apiHash: "sha256_def456"
                      timingMs:
                        load: 5
                        filter: 12
                        total: 17
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayError'
              examples:
                bad_request:
                  summary: Invalid query parameters
                  value:
                    ok: false
                    code: MIND_BAD_REQUEST
                    message: Missing query parameter
                    hint: Provide a valid query name
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayError'

  /mind/verify:
    get:
      summary: Verify Mind Indexes
      description: Check consistency of Mind index files
      operationId: verifyIndexes
      parameters:
        - name: cwd
          in: query
          description: Working directory path
          required: false
          schema:
            type: string
            example: /path/to/project
      responses:
        '200':
          description: Verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
              examples:
                success:
                  summary: All indexes consistent
                  value:
                    ok: true
                    code: null
                    inconsistencies: []
                    hint: All indexes are consistent and up to date
                inconsistent:
                  summary: Index inconsistencies found
                  value:
                    ok: false
                    code: MIND_INDEX_INCONSISTENT
                    inconsistencies:
                      - API index hash mismatch: expected sha256_abc123, got sha256_def456
                      - Required index file missing: docs.json
                    hint: Run "kb mind update" to refresh indexes
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayError'

components:
  schemas:
    QueryRequest:
      type: object
      required:
        - query
        - params
      properties:
        query:
          type: string
          enum: [impact, scope, exports, externals, chain, meta, docs]
          description: Query type to execute
          example: impact
        params:
          type: object
          description: Query-specific parameters
          additionalProperties: true
          example:
            file: packages/core/src/index.ts
        options:
          type: object
          properties:
            limit:
              type: integer
              minimum: 1
              maximum: 1000
              default: 500
              description: Maximum number of results to return
            depth:
              type: integer
              minimum: 1
              maximum: 10
              default: 5
              description: Maximum depth for chain queries
            cacheTtl:
              type: integer
              minimum: 0
              default: 60
              description: Cache TTL in seconds
            noCache:
              type: boolean
              default: false
              description: Disable caching for this query
            pathMode:
              type: string
              enum: [id, absolute]
              default: id
              description: Path representation mode
            aiMode:
              type: boolean
              default: false
              description: Enable AI-friendly output with summaries and suggestions

    QueryResponse:
      type: object
      required:
        - ok
        - code
        - query
        - params
        - result
        - schemaVersion
        - meta
      properties:
        ok:
          type: boolean
          description: Whether the query executed successfully
        code:
          type: string
          nullable: true
          description: Error code if ok is false
        query:
          type: string
          description: The query that was executed
        params:
          type: object
          description: Parameters passed to the query
        result:
          type: object
          description: Query result data
          additionalProperties: true
        summary:
          type: string
          description: AI-friendly summary (only when aiMode=true)
        suggestNextQueries:
          type: array
          items:
            type: string
          description: Suggested follow-up queries (only when aiMode=true)
        schemaVersion:
          type: string
          enum: ["1.0"]
          description: API schema version
        meta:
          $ref: '#/components/schemas/QueryMeta'
        paths:
          type: object
          additionalProperties:
            type: string
          description: Path registry mapping IDs to absolute paths (only when pathMode=id)

    QueryMeta:
      type: object
      required:
        - cwd
        - queryId
        - tokensEstimate
        - cached
        - filesScanned
        - edgesTouched
        - depsHash
        - apiHash
        - timingMs
      properties:
        cwd:
          type: string
          description: Working directory
        queryId:
          type: string
          description: Unique query identifier
        tokensEstimate:
          type: integer
          description: Estimated token count for result
        cached:
          type: boolean
          description: Whether result was served from cache
        truncated:
          type: boolean
          description: Whether result was truncated due to limit
        filesScanned:
          type: integer
          description: Number of files scanned
        edgesTouched:
          type: integer
          description: Number of dependency edges processed
        depsHash:
          type: string
          description: Hash of dependencies index
        apiHash:
          type: string
          description: Hash of API index
        timingMs:
          type: object
          required:
            - load
            - filter
            - total
          properties:
            load:
              type: integer
              description: Time spent loading indexes (ms)
            filter:
              type: integer
              description: Time spent filtering results (ms)
            total:
              type: integer
              description: Total execution time (ms)

    VerifyRequest:
      type: object
      properties:
        cwd:
          type: string
          description: Working directory path
          example: /path/to/project

    VerifyResponse:
      type: object
      required:
        - ok
        - code
        - inconsistencies
        - hint
      properties:
        ok:
          type: boolean
          description: Whether all indexes are consistent
        code:
          type: string
          nullable: true
          description: Error code if ok is false
        inconsistencies:
          type: array
          items:
            type: string
          description: List of inconsistencies found
        hint:
          type: string
          description: Human-readable hint about the verification result

    GatewayError:
      type: object
      required:
        - ok
        - code
        - message
      properties:
        ok:
          type: boolean
          enum: [false]
          description: Always false for error responses
        code:
          type: string
          description: Error code
          enum:
            - MIND_BAD_REQUEST
            - MIND_GATEWAY_ERROR
            - MIND_QUERY_ERROR
            - MIND_INDEX_INCONSISTENT
            - MIND_NO_INDEX
        message:
          type: string
          description: Error message
        hint:
          type: string
          description: Optional hint for resolving the error

  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

security:
  - ApiKey: []

tags:
  - name: Query
    description: Mind query operations
  - name: Verify
    description: Index verification operations
